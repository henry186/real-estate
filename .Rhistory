table(t$X1)
x<-ReadFile(24)
View(x)
ReadFile<-function(i)
{
filename<-paste(LETTERS[i],"_lvr_land_A.csv",sep="")
if(file.exists(filename))
{
x<-read.table(filename,header = T,sep=",",
quote = "",
row.names = NULL,
fill= T,fileEncoding="UTF-8-BOM",
stringsAsFactors = F)
x<-x[-1,]
cat(sprintf("read file %s\n",filename))
return(cbind(id=LETTERS[i],x))
}
}
z<-c(30,2,23,24,3,9,16,10,11,12,13,14,17,18,19,20,21,22,25,26,27)
z<-z+1
z<-z[-1]
z
paste(z,",")
paste(as.character(z),",")
cat(paste(as.character(z),","))
taiwan<-ReadAllFile(1)
taiwan<-ReadAllFile(1,108)
taiwan <-taiwan[c(3 , 24 , 25 , 4 , 10 , 17 , 11 , 12 , 13 , 14 ,
15 , 18 , 19 , 20 , 21 , 22 , 23 , 26 , 27 , 28 ,)]
taiwan <-taiwan[c(3 , 24 , 25 , 4 , 10 , 17 , 11 , 12 , 13 , 14 ,
15 , 18 , 19 , 20 , 21 , 22 , 23 , 26 , 27 , 28)]
View(taiwan)
taiwan<-adply(1:4,.margins = 1,.fun = ReadAllFile,year=year)
source('~/real-estate/Taiwan-estate.r', encoding = 'UTF-8')
taiwan<-adply(1:4,.margins = 1,.fun = ReadAllFile,year=year)
taiwan <- adply(108,.margins = 1,.fun=readyear)
year<-108
taiwan<-adply(1:4,.margins = 1,.fun = ReadAllFile,year=year)
View(taiwan)
taiwan <-taiwan[c(2,3 , 24 , 25 , 4 , 10 , 17 , 11 , 12 , 13 , 14 ,
15 , 18 , 19 , 20 , 21 , 22 , 23 , 26 , 27 , 28)]
View(taiwan)
colnames(taiwan)[c(1,2,4)]<-c("name","PricePerSqrtm")
View(taiwan)
colnames(taiwan)[c(1,2,4)]<-c("id","name","PricePerSqrtm")
colnames(taiwan)[c(2,4)]<-c(name","PricePerSqrtm")
taiwan[3]<- as.numeric(taiwan[[3]])
taiwan[4]<- as.numeric((taiwan[[4]]))
taiwan[6]<- as.numeric(taiwan[[6]])+19110000
taiwan[7]<- as.numeric(taiwan[[7]])+19110000
taiwan[13]<-as.numeric(taiwan[[13]])
#transfirm to class date
a<-taiwan$交易年月日
taiwan$交易年月日<-paste(substr(a,1,4),substr(a,5,6),substr(a,7,8),sep="-")
taiwan[6]<-as.Date(taiwan[[6]])
return(na.omit(taiwan))
}
plotmap<-function(taiwan,choosemap)
{
setwd("~/real-estate")
#read shp file and use the county region
taiwanmap<-readShapeSpatial("twmapdata/TOWN_MOI_1090324.shp")        #readshpfile
#transform the encoding
taiwanmap$TOWNNAME<- iconv(taiwanmap$TOWNNAME,from = "UTF-8", to ="CP950")
taiwanmap$COUNTYNAME<- iconv(taiwanmap$COUNTYNAME,from = "UTF-8", to ="CP950")
#create a df include countyid & county name
NameIdTable <- data.frame(id = taiwanmap$COUNTYID,
name = taiwanmap$COUNTYNAME,
stringsAsFactors = F)
taiwanmap.county<-fortify(taiwanmap,region = "COUNTYID")  #transform shpdf to df
#remove the Spratly Islands and Pratas Island
x<-which(taiwanmap.county$lat<=20)
taiwanmap.county<-taiwanmap.county[-x,]
if(choosemap=="mean")
{
#meanplot
#calculate the avg of price/squaremeters
priceMean<-ddply(taiwan,.(id),summarize,mean = round(mean(PricePerSqrtm,na.rm = T)))
mean_plot<-merge(priceMean,NameIdTable,by= "id",all.NameIdTable=T)
meanPlot<-merge(taiwanmap.county,mean_plot,by="id",all.mean_plot=T)
priceMeanMap<-ggplot()+geom_polygon(data = meanPlot,
aes(x=long,
y=lat,
group=group,
fill=mean),
color="black",
size=0.25)+
scale_fill_gradientn(
colours = brewer.pal(9,"Reds"))+
theme_void()+
coord_map()+
labs(title = "mean price of the real estate")
return(priceMeanMap)
}
else if(choosemap=="max")
{
#maxplot
#calculate the max value of price/square meters
priceMax<-ddply(taiwan,.(id),summarise,max=max(PricePerSqrtm,na.rm = T))
max_plot<-merge(p,priceMax,by= "id")
maxPlot<-merge(taiwanmap.county,max_plot,by="id",all.max_plot=T)
priceMaxMap<-ggplot()+geom_polygon(data = maxPlot,
aes(x=long,
y=lat,
group=group,
fill=max),
color="black",
size=0.25)+
scale_fill_gradientn(
colours = brewer.pal(9,"Reds"))+
theme_void()+
coord_map()+
labs(title = "max price of the real estate")
return(priceMaxMap)
}
else if(choosemap=="min")
{
#minplot
#calculate the min value of price/square meters
priceMin<-ddply(taiwan,.(id),summarise,min=min(PricePerSqrtm,na.rm = T))
min_plot<-merge(p,priceMin,by= "id")
minPlot<-merge(taiwanmap.county,min_plot,by="id",all.min_plot=T)
priceMinMap<-ggplot()+geom_polygon(data = minPlot,
aes(x=long,
y=lat,
group=group,
fill=min),
color="black",
size=0.25)+
scale_fill_gradientn(
colours = brewer.pal(9,"Reds"))+
theme_void()+
coord_map()+
labs(title = "min price of the real estate")
return(priceMinMap)
}
}
#plot the map of the max,min,mean of the  estate price
#grid.arrange(priceMaxMap,priceMinMap,priceMeanMap,nrow = 2)
setwd("~/real-estate/108-2")
taiwan <- adply(108,.margins = 1,.fun=readyear)
View(taiwan)
colnames(taiwan)[c(2,4)]<-c("name","PricePerSqrtm")
taiwan[3]<- as.numeric(taiwan[[3]])
taiwan[4]<- as.numeric((taiwan[[4]]))
View(taiwan)
taiwan[6]<- as.numeric(taiwan[[6]])+19110000
taiwan[7]<- as.numeric(taiwan[[7]])+19110000
taiwan[13]<-as.numeric(taiwan[[13]])
View(taiwan)
#transfirm to class date
a<-taiwan$交易年月日
taiwan$交易年月日<-paste(substr(a,1,4),substr(a,5,6),substr(a,7,8),sep="-")
taiwan[6]<-as.Date(taiwan[[6]])
return(na.omit(taiwan))
View(taiwan)
taiwan<-adply(1:4,.margins = 1,.fun = ReadAllFile,year=year)
taiwan<-taiwan%>%filter(交易標的!="土地"&交易標的!="車位")
taiwan <-taiwan[c(2 , 3 , 24 , 25 , 4 , 10 , 17 , 11 , 12 , 13 , 14 ,
15 , 18 , 19 , 20 , 21 , 22 , 23 , 26 , 27 , 28)]
class(taiwan$交易年月日)
class(as.numeric(taiwan$交易年月日))
table(taiwan$交易標的)
View(taiwan)
a<-ReadFile(1)
table(a$交易標的)
View(a)
taiwan<-adply(1:4,.margins = 1,.fun = ReadAllFile,year=year)
View(taiwan)
taiwan<-taiwan%>%filter(交易標的=="房地(土地+建物)"|交易標的=="房地(土地+建物)+車位"|
交易標的=="建物")
View(taiwan)
taiwan <-taiwan[c(2 , 3 , 24 , 25 , 4 , 10 , 17 , 11 , 12 , 13 , 14 ,
15 , 18 , 19 , 20 , 21 , 22 , 23 , 26 , 27 , 28)]
View(taiwan)
colnames(taiwan)[c(2,4)]<-c("name","PricePerSqrtm")
taiwan[3]<- as.numeric(taiwan[[3]])
taiwan[4]<- as.numeric((taiwan[[4]]))
View(taiwan)
taiwan[6]<- as.numeric(taiwan[[6]])+19110000
View(taiwan)
taiwan[7]<- as.numeric(taiwan[[7]])+19110000
View(taiwan)
taiwan[13]<-as.numeric(taiwan[[13]])
#transfirm to class date
a<-taiwan$交易年月日
taiwan$交易年月日<-paste(substr(a,1,4),substr(a,5,6),substr(a,7,8),sep="-")
g<-na
g<-NA
g
is.na(g)
gsub
gsub(na,"",g)
gsub(NA,"",g)
gsub("NA","",g)
df<-data.frame(apple=1:100)
df<-cbind(apple,id="a")
df<-cbind(df,id="a")
View(df)
setwd("~/real-estate")
#read shp file and use the county region
taiwanmap<-readShapeSpatial("twmapdata/TOWN_MOI_1090324.shp")        #readshpfile
#transform the encoding
taiwanmap$TOWNNAME<- iconv(taiwanmap$TOWNNAME,from = "UTF-8", to ="CP950")
taiwanmap$COUNTYNAME<- iconv(taiwanmap$COUNTYNAME,from = "UTF-8", to ="CP950")
#create a df include countyid & county name
NameIdTable <- data.frame(id = taiwanmap$COUNTYID,
name = taiwanmap$COUNTYNAME,
stringsAsFactors = F)
taiwanmap.county<-fortify(taiwanmap,region = "COUNTYID")  #transform shpdf to df
#remove the Spratly Islands and Pratas Island
x<-which(taiwanmap.county$lat<=20)
taiwanmap.county<-taiwanmap.county[-x,]
#meanplot
#calculate the avg of price/squaremeters
priceMean<-ddply(taiwan,.(id),summarize,mean = round(mean(PricePerSqrtm,na.rm = T)))
View(priceMean)
View(NameIdTable)
View(priceMean)
mean_plot<-merge(priceMean,NameIdTable,by= "id",all.NameIdTable=T)
View(mean_plot)
mean_plot<-merge(priceMean,NameIdTable,by= "id")
View(NameIdTable)
mean_plot<-merge(priceMean,NameIdTable,by= "id",all=T)
View(mean_plot)
View(priceMean)
mean_plot<-inner_join(priceMean,NameIdTable,by= "id")
mean_plot<-right_join(priceMean,NameIdTable,by= "id")
meanPlot<-left_join(taiwanmap.county,mean_plot,by="id")
meanPlot<-inner_join(taiwanmap.county,mean_plot,by="id")
levels(taiwanmap.county$id)
levels(mean_plot)
View(priceMean)
class(priceMean)
class(priceMean$mean)
class(priceMean$id)
#create a df include countyid & county name
NameIdTable <- data.frame(id = taiwanmap$COUNTYID,
name = taiwanmap$COUNTYNAME)
mean_plot<-right_join(priceMean,NameIdTable,by= "id")
meanPlot<-inner_join(taiwanmap.county,mean_plot,by="id")
#create a df include countyid & county name
NameIdTable <- data.frame(id = taiwanmap$COUNTYID,
name = taiwanmap$COUNTYNAME,
stringsAsFactors = F)
priceMean$id<-as.factor(priceMean$id)
levels(priceMean$id)
levels(NameIdTable$id)
mean_plot<-right_join(priceMean,NameIdTable,by= "id")
meanPlot<-inner_join(taiwanmap.county,mean_plot,by="id")
View(taiwanmap.county)
View(mean_plot)
#create a df include countyid & county name
NameIdTable <- data.frame(id = taiwanmap$COUNTYID,
name = taiwanmap$COUNTYNAME,
stringsAsFactors = F)
#meanplot
#calculate the avg of price/squaremeters
priceMean<-ddply(taiwan,.(id),summarize,mean = round(mean(PricePerSqrtm,na.rm = T)))
class(priceMean$id)
priceMean$id<-as.character(priceMean$id)
mean_plot<-right_join(priceMean,NameIdTable,by= "id")
View(mean_plot)
meanPlot<-inner_join(taiwanmap.county,mean_plot,by="id")
View(meanPlot)
View(taiwanmap.county)
#create a df include countyid & county name
NameIdTable <- data.frame(id = taiwanmap$COUNTYID,
name = taiwanmap$COUNTYNAME,
stringsAsFactors = F)
View(NameIdTable)
id = taiwanmap$COUNTYID
name = taiwanmap$COUNTYNAME
NameIdTable<-unique(NameIdTable)
View(NameIdTable)
#meanplot
#calculate the avg of price/squaremeters
priceMean<-ddply(taiwan,.(id),summarize,mean = round(mean(PricePerSqrtm,na.rm = T)))
mean_plot<-right_join(priceMean,NameIdTable,by= "id")
meanPlot<-inner_join(taiwanmap.county,mean_plot,by="id")
priceMeanMap<-ggplot()+geom_polygon(data = meanPlot,
aes(x=long,
y=lat,
group=group,
fill=mean),
color="black",
size=0.25)+
scale_fill_gradientn(
colours = brewer.pal(9,"Reds"))+
theme_void()+
coord_map()+
labs(title = "mean price of the real estate")
priceMeanMap
source('~/real-estate/Taiwan-estate.r', encoding = 'UTF-8')
grid.arrange(plotmap(taiwan,"mean"),priceMinMap,priceMeanMap,nrow = 2)
grid.arrange(plotmap(taiwan,"mean"),
plotmap(taiwan,"min"),
plotmap(taiwan,"max"),
nrow = 2)
plotmap<-function(taiwan,choosemap)
{
setwd("~/real-estate")
#read shp file and use the county region
taiwanmap<-readShapeSpatial("twmapdata/TOWN_MOI_1090324.shp")        #readshpfile
#transform the encoding
taiwanmap$TOWNNAME<- iconv(taiwanmap$TOWNNAME,from = "UTF-8", to ="CP950")
taiwanmap$COUNTYNAME<- iconv(taiwanmap$COUNTYNAME,from = "UTF-8", to ="CP950")
#create a df include countyid & county name
NameIdTable <- data.frame(id = taiwanmap$COUNTYID,
name = taiwanmap$COUNTYNAME,
stringsAsFactors = F)
NameIdTable<-unique(NameIdTable)
taiwanmap.county<-fortify(taiwanmap,region = "COUNTYID")  #transform shpdf to df
#remove the Spratly Islands and Pratas Island
x<-which(taiwanmap.county$lat<=20)
taiwanmap.county<-taiwanmap.county[-x,]
if(choosemap=="mean")
{
#meanplot
#calculate the avg of price/squaremeters
priceMean<-ddply(taiwan,.(id),summarize,mean = round(mean(PricePerSqrtm,na.rm = T)))
mean_plot<-right_join(priceMean,NameIdTable,by= "id")
meanPlot<-inner_join(taiwanmap.county,mean_plot,by="id")
priceMeanMap<-ggplot()+geom_polygon(data = meanPlot,
aes(x=long,
y=lat,
group=group,
fill=mean),
color="black",
size=0.25)+
scale_fill_gradientn(
colours = brewer.pal(9,"Reds"))+
theme_void()+
coord_map()+
labs(title = "mean price of the real estate")
return(priceMeanMap)
}
else if(choosemap=="max")
{
#maxplot
#calculate the max value of price/square meters
priceMax<-ddply(taiwan,.(id),summarise,max=max(PricePerSqrtm,na.rm = T))
max_plot<-merge(NameIdTable,priceMax,by= "id")
maxPlot<-merge(taiwanmap.county,max_plot,by="id",all.max_plot=T)
priceMaxMap<-ggplot()+geom_polygon(data = maxPlot,
aes(x=long,
y=lat,
group=group,
fill=max),
color="black",
size=0.25)+
scale_fill_gradientn(
colours = brewer.pal(9,"Reds"))+
theme_void()+
coord_map()+
labs(title = "max price of the real estate")
return(priceMaxMap)
}
else if(choosemap=="min")
{
#minplot
#calculate the min value of price/square meters
priceMin<-ddply(taiwan,.(id),summarise,min=min(PricePerSqrtm,na.rm = T))
min_plot<-merge(NameIdTable,priceMin,by= "id")
minPlot<-merge(taiwanmap.county,min_plot,by="id",all.min_plot=T)
priceMinMap<-ggplot()+geom_polygon(data = minPlot,
aes(x=long,
y=lat,
group=group,
fill=min),
color="black",
size=0.25)+
scale_fill_gradientn(
colours = brewer.pal(9,"Reds"))+
theme_void()+
coord_map()+
labs(title = "min price of the real estate")
return(priceMinMap)
}
}
grid.arrange(plotmap(taiwan,"mean"),
plotmap(taiwan,"min"),
plotmap(taiwan,"max"),
nrow = 2)
max_plot<-left_join(NameIdTable,priceMax,by= "id")
plotmap<-function(taiwan,choosemap)
{
setwd("~/real-estate")
#read shp file and use the county region
taiwanmap<-readShapeSpatial("twmapdata/TOWN_MOI_1090324.shp")        #readshpfile
#transform the encoding
taiwanmap$TOWNNAME<- iconv(taiwanmap$TOWNNAME,from = "UTF-8", to ="CP950")
taiwanmap$COUNTYNAME<- iconv(taiwanmap$COUNTYNAME,from = "UTF-8", to ="CP950")
#create a df include countyid & county name
NameIdTable <- data.frame(id = taiwanmap$COUNTYID,
name = taiwanmap$COUNTYNAME,
stringsAsFactors = F)
NameIdTable<-unique(NameIdTable)
taiwanmap.county<-fortify(taiwanmap,region = "COUNTYID")  #transform shpdf to df
#remove the Spratly Islands and Pratas Island
x<-which(taiwanmap.county$lat<=20)
taiwanmap.county<-taiwanmap.county[-x,]
if(choosemap=="mean")
{
#meanplot
#calculate the avg of price/squaremeters
priceMean<-ddply(taiwan,.(id),summarize,mean = round(mean(PricePerSqrtm,na.rm = T)))
mean_plot<-right_join(priceMean,NameIdTable,by= "id")
meanPlot<-inner_join(taiwanmap.county,mean_plot,by="id")
priceMeanMap<-ggplot()+geom_polygon(data = meanPlot,
aes(x=long,
y=lat,
group=group,
fill=mean),
color="black",
size=0.25)+
scale_fill_gradientn(
colours = brewer.pal(9,"Reds"))+
theme_void()+
coord_map()+
labs(title = "mean price of the real estate")
return(priceMeanMap)
}
else if(choosemap=="max")
{
#maxplot
#calculate the max value of price/square meters
priceMax<-ddply(taiwan,.(id),summarise,max=max(PricePerSqrtm,na.rm = T))
max_plot<-left_join(NameIdTable,priceMax,by= "id")
maxPlot<-inner_join(taiwanmap.county,max_plot,by="id")
priceMaxMap<-ggplot()+geom_polygon(data = maxPlot,
aes(x=long,
y=lat,
group=group,
fill=max),
color="black",
size=0.25)+
scale_fill_gradientn(
colours = brewer.pal(9,"Reds"))+
theme_void()+
coord_map()+
labs(title = "max price of the real estate")
return(priceMaxMap)
}
else if(choosemap=="min")
{
#minplot
#calculate the min value of price/square meters
priceMin<-ddply(taiwan,.(id),summarise,min=min(PricePerSqrtm,na.rm = T))
min_plot<-left_join(NameIdTable,priceMin,by= "id")
minPlot<-inner_join(taiwanmap.county,min_plot,by="id",all.min_plot=T)
priceMinMap<-ggplot()+geom_polygon(data = minPlot,
aes(x=long,
y=lat,
group=group,
fill=min),
color="black",
size=0.25)+
scale_fill_gradientn(
colours = brewer.pal(9,"Reds"))+
theme_void()+
coord_map()+
labs(title = "min price of the real estate")
return(priceMinMap)
}
}
grid.arrange(plotmap(taiwan,"mean"),
plotmap(taiwan,"min"),
plotmap(taiwan,"max"),
nrow = 2)
taoyuan<-ReadFile(8)
taoyuan<-ReadFile(1)
setwd(109-1)
setwd("109-1")
taoyuan<-ReadFile(8)
taoyuan$單價元平方公尺<-as.numeric(taoyuan$單價元平方公尺)
View(taoyuan)
taoyuan[taoyuan$單價元平方公尺>10000000,]
sum(taoyuan[taoyuan$單價元平方公尺>10000000,])
sum(taoyuan[taoyuan$單價元平方公尺>=10000000,])
class(taoyuan$單價元平方公尺)
lengrh(taoyuan[taoyuan$單價元平方公尺>10000000,])
length(taoyuan[taoyuan$單價元平方公尺>10000000,])
length(taoyuan[taoyuan$單價元平方公尺>40000000,])
length(taoyuan[taoyuan$單價元平方公尺>50000000,])
length(taoyuan[taoyuan$單價元平方公尺>60000000,])
length(taoyuan[taoyuan$單價元平方公尺>80000000,])
length(taoyuan[taoyuan$單價元平方公尺>100000000,])
q<-taoyuan[taoyuan$單價元平方公尺>100000000,]
View(q)
priceMax<-ddply(taiwan,.(id),summarise,max=max(PricePerSqrtm,na.rm = T))
View(priceMax)
View(priceMax)
kmeans
?keans
?kmeans
View(taiwan)
df<-cbind(spqce=taiwan$建物移轉總面積平方公尺,price=taiwan$PricePerSqrtm)
View(df)
kmeans(df)
kmeans(df,3)
kmeans(df,3)==1
kmeans(df,3)=='1'
df<-kmeans(df,3)
p<-kmeans(df,3)
View(df)
cbind(taiwan,cluster=df$cluster)
taiwan<-cbind(taiwan,cluster=df$cluster)
View(taiwan)
taiwan<-taiwan[taiwan$cluster==1,]
View(taiwan)
source('~/real-estate/Taiwan-estate.r', encoding = 'UTF-8')
